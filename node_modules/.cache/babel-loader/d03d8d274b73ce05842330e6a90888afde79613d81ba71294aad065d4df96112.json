{"ast":null,"code":"var _jsxFileName = \"/home/aysh/Downloads/api-practice-main/src/components/BackgroundMusic.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// function BackgroundMusic({ audioSrc }) {\n//   const [audio] = useState(new Audio(audioSrc));\n//   const [permissionGranted, setPermissionGranted] = useState(false);\n\n//   useEffect(() => {\n//     if (permissionGranted) {\n//       audio.play();\n//     }\n//   }, [audio, permissionGranted]);\n\n//   const handlePermission = () => {\n//     if (!permissionGranted) {\n//       audio.play();\n//       setPermissionGranted(true);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!permissionGranted && (\n//         <div>\n//           <p>This website uses background music.</p>\n//           <button onClick={handlePermission}>Click to Enable Music</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default BackgroundMusic;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BackgroundMusic({\n  audioSrc\n}) {\n  _s();\n  const [audio] = useState(new Audio(audioSrc));\n  const [audioPlayed, setAudioPlayed] = useState(false);\n  useEffect(() => {\n    if (audioPlayed) {\n      audio.play();\n    }\n  }, [audio, audioPlayed]);\n  const handleInteraction = () => {\n    if (!audioPlayed) {\n      setAudioPlayed(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleInteraction,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This website uses background music.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), audioPlayed && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Background music is playing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(BackgroundMusic, \"gBICstkdSBFueeXeEU3Gc1ZbsdQ=\");\n_c = BackgroundMusic;\nexport default BackgroundMusic;\nvar _c;\n$RefreshReg$(_c, \"BackgroundMusic\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BackgroundMusic","audioSrc","_s","audio","Audio","audioPlayed","setAudioPlayed","play","handleInteraction","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aysh/Downloads/api-practice-main/src/components/BackgroundMusic.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// function BackgroundMusic({ audioSrc }) {\n//   const [audio] = useState(new Audio(audioSrc));\n//   const [permissionGranted, setPermissionGranted] = useState(false);\n\n//   useEffect(() => {\n//     if (permissionGranted) {\n//       audio.play();\n//     }\n//   }, [audio, permissionGranted]);\n\n//   const handlePermission = () => {\n//     if (!permissionGranted) {\n//       audio.play();\n//       setPermissionGranted(true);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!permissionGranted && (\n//         <div>\n//           <p>This website uses background music.</p>\n//           <button onClick={handlePermission}>Click to Enable Music</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default BackgroundMusic;\n\n\nimport React, { useState, useEffect } from 'react';\n\nfunction BackgroundMusic({ audioSrc }) {\n  const [audio] = useState(new Audio(audioSrc));\n  const [audioPlayed, setAudioPlayed] = useState(false);\n\n  useEffect(() => {\n    if (audioPlayed) {\n      audio.play();\n    }\n  }, [audio, audioPlayed]);\n\n  const handleInteraction = () => {\n    if (!audioPlayed) {\n      setAudioPlayed(true);\n    }\n  };\n\n  return (\n    <div onClick={handleInteraction}>\n      <p>This website uses background music.</p>\n      {audioPlayed && <p>Background music is playing.</p>}\n    </div>\n  );\n}\n\nexport default BackgroundMusic;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,KAAK,CAACH,QAAQ,CAAC,CAAC;EAC7C,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,IAAIQ,WAAW,EAAE;MACfF,KAAK,CAACI,IAAI,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACJ,KAAK,EAAEE,WAAW,CAAC,CAAC;EAExB,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACH,WAAW,EAAE;MAChBC,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKU,OAAO,EAAED,iBAAkB;IAAAE,QAAA,gBAC9BX,OAAA;MAAAW,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACzCT,WAAW,iBAAIN,OAAA;MAAAW,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACZ,EAAA,CAtBQF,eAAe;AAAAe,EAAA,GAAff,eAAe;AAwBxB,eAAeA,eAAe;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}